# File Specification: https://gist.github.com/Shadows-of-Fire/88ac714a758636c57a52e32ace5474c1

# 

quickshooting {

    info {
        # isTradeable
        # Default: true
        B:isTradeable=true

        # isTreasureOnly
        # Default: false
        B:isTreasureOnly=false

        # isDiscoverable
        # Default: true
        B:isDiscoverable=true
    }

    attributemodifierholders {

        1 {
            # the attribute
            # Default: attributeslib:draw_speed
            S:attribute=attributeslib:draw_speed

            # the bonusPerLevel
            # Default: 0.1; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=0.1

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: ADDITION
            S:operation=ADDITION
        }

        2 {
            # the attribute
            # Default: attributeslib:draw_speed
            S:attribute=attributeslib:draw_speed

            # the bonusPerLevel
            # Default: 0.1; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=0.1

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: ADDITION
            S:operation=ADDITION
        }

    }

}


terminator {

    info {
        # isTradeable
        # Default: false
        B:isTradeable=false

        # isTreasureOnly
        # Default: false
        B:isTreasureOnly=false

        # isDiscoverable
        # Default: true
        B:isDiscoverable=true
    }

    attributemodifierholders {

        1 {
            # the attribute
            # Default: attributeslib:draw_speed
            S:attribute=attributeslib:crit_damage

            # the bonusPerLevel
            # Default: 0.5; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=-0.5

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: ADDITION
            S:operation=MULTIPLY_TOTAL
        }

        2 {
            # the attribute
            # Default: attributeslib:crit_chance
            S:attribute=attributeslib:crit_chance

            # the bonusPerLevel
            # Default: -0.75; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=-0.75

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: MULTIPLY_TOTAL
            S:operation=MULTIPLY_TOTAL
        }

        3 {
            # the attribute
            # Default: attributeslib:crit_damage
            S:attribute=attributeslib:draw_speed

            # the bonusPerLevel
            # Default: -0.5; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=0.5

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: MULTIPLY_TOTAL
            S:operation=ADDITION
        }

        4 {
            # the attribute
            # Default: attributeslib:crit_damage
            S:attribute=attributeslib:crit_damage

            # the bonusPerLevel
            # Default: -0.5; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=-0.5

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: MULTIPLY_TOTAL
            S:operation=MULTIPLY_TOTAL
        }

        5 {
            # the attribute
            # Default: attributeslib:crit_chance
            S:attribute=attributeslib:crit_chance

            # the bonusPerLevel
            # Default: -0.75; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=-0.75

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: MULTIPLY_TOTAL
            S:operation=MULTIPLY_TOTAL
        }

        6 {
            # the attribute
            # Default: attributeslib:draw_speed
            S:attribute=attributeslib:draw_speed

            # the bonusPerLevel
            # Default: 0.5; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=0.5

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: ADDITION
            S:operation=ADDITION
        }

    }

}


piercethrough {

    info {
        # isTradeable
        # Default: true
        B:isTradeable=true

        # isTreasureOnly
        # Default: false
        B:isTreasureOnly=false

        # isDiscoverable
        # Default: true
        B:isDiscoverable=true
    }

    attributemodifierholders {

        1 {
            # the attribute
            # Default: attributeslib:armor_pierce
            S:attribute=attributeslib:armor_pierce

            # the bonusPerLevel
            # Default: 2.0; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=2.0

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: ADDITION
            S:operation=ADDITION
        }

        2 {
            # the attribute
            # Default: attributeslib:armor_pierce
            S:attribute=attributeslib:armor_pierce

            # the bonusPerLevel
            # Default: 2.0; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=2.0

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: ADDITION
            S:operation=ADDITION
        }

    }

}


scabbing {

    info {
        # isTradeable
        # Default: true
        B:isTradeable=true

        # isTreasureOnly
        # Default: false
        B:isTreasureOnly=false

        # isDiscoverable
        # Default: true
        B:isDiscoverable=true
    }

    attributemodifierholders {

        1 {
            # the attribute
            # Default: attributeslib:armor_shred
            S:attribute=attributeslib:armor_shred

            # the bonusPerLevel
            # Default: 0.05; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=0.05

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: ADDITION
            S:operation=ADDITION
        }

        2 {
            # the attribute
            # Default: attributeslib:armor_shred
            S:attribute=attributeslib:armor_shred

            # the bonusPerLevel
            # Default: 0.05; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=0.05

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: ADDITION
            S:operation=ADDITION
        }

    }

}


vanquisher {

    info {
        # isTradeable
        # Default: false
        B:isTradeable=false

        # isTreasureOnly
        # Default: false
        B:isTreasureOnly=false

        # isDiscoverable
        # Default: true
        B:isDiscoverable=true
    }

}


legend {
    # the attributeBonusPerLevel
    # Default: 0.02; Range: [1.4E-45 ~ 3.4028235E38]
    S:attributeBonusPerLevel=0.02

    info {
        # isTradeable
        # Default: false
        B:isTradeable=false

        # isTreasureOnly
        # Default: true
        B:isTreasureOnly=true

        # isDiscoverable
        # Default: false
        B:isDiscoverable=false
    }

}


cutdown {

    info {
        # isTradeable
        # Default: true
        B:isTradeable=true

        # isTreasureOnly
        # Default: false
        B:isTreasureOnly=false

        # isDiscoverable
        # Default: true
        B:isDiscoverable=true
    }

}


lifesteal {

    info {
        # isTradeable
        # Default: true
        B:isTradeable=true

        # isTreasureOnly
        # Default: false
        B:isTreasureOnly=false

        # isDiscoverable
        # Default: true
        B:isDiscoverable=true
    }

    attributemodifierholders {

        1 {
            # the attribute
            # Default: attributeslib:life_steal
            S:attribute=attributeslib:life_steal

            # the bonusPerLevel
            # Default: 0.025; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=0.025

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: ADDITION
            S:operation=ADDITION
        }

        2 {
            # the attribute
            # Default: attributeslib:life_steal
            S:attribute=attributeslib:life_steal

            # the bonusPerLevel
            # Default: 0.025; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=0.025

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: ADDITION
            S:operation=ADDITION
        }

    }

}


ultimate {

    info {
        # isTradeable
        # Default: false
        B:isTradeable=false

        # isTreasureOnly
        # Default: true
        B:isTreasureOnly=true

        # isDiscoverable
        # Default: false
        B:isDiscoverable=false
    }

}


laststand {
    # the maxHealthPercentage
    # Default: 0.34; Range: [1.4E-45 ~ 3.4028235E38]
    S:maxHealthPercentage=0.34

    # the armorBonusPerLevel
    # Default: 0.05; Range: [1.4E-45 ~ 3.4028235E38]
    S:armorBonusPerLevel=0.05

    # the armorToughnessBonusPerLevel
    # Default: 0.05; Range: [1.4E-45 ~ 3.4028235E38]
    S:armorToughnessBonusPerLevel=0.05

    info {
        # isTradeable
        # Default: false
        B:isTradeable=false

        # isTreasureOnly
        # Default: true
        B:isTreasureOnly=true

        # isDiscoverable
        # Default: false
        B:isDiscoverable=false
    }

}


criticaldamage {

    info {
        # isTradeable
        # Default: true
        B:isTradeable=true

        # isTreasureOnly
        # Default: false
        B:isTreasureOnly=false

        # isDiscoverable
        # Default: true
        B:isDiscoverable=true
    }

    attributemodifierholders {

        1 {
            # the attribute
            # Default: attributeslib:crit_damage
            S:attribute=attributeslib:crit_damage

            # the bonusPerLevel
            # Default: 0.05; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=0.05

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: ADDITION
            S:operation=ADDITION
        }

        2 {
            # the attribute
            # Default: attributeslib:crit_damage
            S:attribute=attributeslib:crit_damage

            # the bonusPerLevel
            # Default: 0.05; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=0.05

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: ADDITION
            S:operation=ADDITION
        }

    }

}


criticalchance {

    info {
        # isTradeable
        # Default: true
        B:isTradeable=true

        # isTreasureOnly
        # Default: false
        B:isTreasureOnly=false

        # isDiscoverable
        # Default: true
        B:isDiscoverable=true
    }

    attributemodifierholders {

        1 {
            # the attribute
            # Default: attributeslib:crit_chance
            S:attribute=attributeslib:crit_chance

            # the bonusPerLevel
            # Default: 0.05; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=0.05

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: ADDITION
            S:operation=ADDITION
        }

        2 {
            # the attribute
            # Default: attributeslib:crit_chance
            S:attribute=attributeslib:crit_chance

            # the bonusPerLevel
            # Default: 0.05; Range: [-100.0 ~ 100.0]
            S:bonusPerLevel=0.05

            # the operation:ADDITION,MULTIPLY_BASE,MULTIPLY_TOTAL
            # Default: ADDITION
            S:operation=ADDITION
        }

    }

}


